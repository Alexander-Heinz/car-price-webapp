# Stage 1: Build the frontend using Node.js
FROM node:16-alpine as build

WORKDIR /app

# Copy frontend files and install dependencies
COPY package*.json ./
RUN npm install
COPY . .

# Build the frontend
RUN npm run build

# Stage 2: Prepare the backend (Python)
FROM python:3.9.7-slim as backend

# Install dependencies
RUN pip install -U pip
RUN pip install pipenv 

WORKDIR /app

# Copy backend files and install dependencies
COPY ["Pipfile", "Pipfile.lock", "./"]
RUN pipenv install --system --deploy
COPY ["predict.py", "data_cleaner.py", "models/mdl_pipeline.bin", "./"]

# Expose backend port
EXPOSE 9696

# Stage 3: Final image with Nginx
FROM nginx:alpine

# Copy the frontend build files from the build stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy the nginx configuration files (ensure they exist in your project directory)
COPY ./nginx/default.conf /etc/nginx/conf.d/default.conf:ro
COPY ./nginx/nginx.conf /etc/nginx/nginx.conf:ro

# Expose ports for HTTP and HTTPS
EXPOSE 80 443

# Set entrypoint for Nginx and backend (Gunicorn)
CMD ["sh", "-c", "gunicorn --bind 0.0.0.0:9696 predict:app & nginx -g 'daemon off;'"]
